name: Deploy Blazor WASM PWA to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Notbremse: alle 9.0 Reste in csproj entfernen (nur falls noch irgendwo vorhanden)
      - name: Force net8 in all csproj (safety)
        run: |
          set -e
          # net9.0 -> net8.0
          grep -Rli "<TargetFramework>net9.0</TargetFramework>" --include="*.csproj" . | xargs -r sed -i 's|<TargetFramework>net9.0</TargetFramework>|<TargetFramework>net8.0</TargetFramework>|g'
          # TargetFrameworks mit net9.0 bereinigen
          grep -Rli "<TargetFrameworks>.*net9.0" --include="*.csproj" . | xargs -r sed -i 's|;?net9\.0||g'
          # Sdk mit /9.x entfernen
          grep -Rli 'Sdk="Microsoft.NET.Sdk\.[^"]*/9\.' --include="*.csproj" . | xargs -r sed -i 's|Sdk="Microsoft.NET.Sdk.\([^"]*\)/9\.[0-9.]*"|Sdk="Microsoft.NET.Sdk.\1"|g'

      - name: Restore
        run: dotnet restore "Gym Tracker/Gym Tracker.csproj"

      - name: Publish (Release)
        run: dotnet publish "Gym Tracker/Gym Tracker.csproj" -c Release

      - name: Add SPA 404 fallback
        run: |
          cp "Gym Tracker/bin/Release/net8.0/publish/wwwroot/index.html" "Gym Tracker/bin/Release/net8.0/publish/wwwroot/404.html"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "Gym Tracker/bin/Release/net8.0/publish/wwwroot"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
