name: Deploy Blazor WASM PWA to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # DEBUG: zeigt, was der Runner wirklich sieht
      - name: Debug repo files
        run: |
          echo "List all csproj:"
          git ls-files '*.csproj'
          echo
          echo "Search for net9.0 in csproj/props/targets/global.json:"
          grep -Rni --include="*.csproj" --include="*.props" --include="*.targets" --include="global.json" net9.0 . || true
          echo
          echo "Show main csproj (first 120 lines):"
          sed -n '1,120p' "Gym Tracker/Gym Tracker.csproj" || true

      # NOTBREMSE: erzwingt net8.0 & entfernt evtl. SDK-/9.x-Suffixe
      - name: Force net8 across all csproj
        run: |
          set -e
          for f in $(git ls-files '*.csproj'); do
            echo "Patching $f"
            # SDK-Versionssuffix /9.x entfernen, z.B. Sdk=".../9.0.8"
            sed -i 's|Sdk="Microsoft.NET.Sdk\.\([^"]*\)/[0-9.]*"|Sdk="Microsoft.NET.Sdk.\1"|g' "$f"
            # Multi-Target auf net8.0 vereinheitlichen
            sed -i 's|<TargetFrameworks>[^<]*</TargetFrameworks>|<TargetFrameworks>net8.0</TargetFrameworks>|g' "$f"
            # Single-Target auf net8.0 setzen
            sed -i 's|<TargetFramework>[^<]*</TargetFramework>|<TargetFramework>net8.0</TargetFramework>|g' "$f"
          done
          echo "After patch, show main csproj again:"
          sed -n '1,120p' "Gym Tracker/Gym Tracker.csproj" || true

      - name: Restore
        run: dotnet restore "Gym Tracker/Gym Tracker.csproj"

      - name: Publish (Release)
        run: dotnet publish "Gym Tracker/Gym Tracker.csproj" -c Release

      # SPA-Fallback: 404.html = index.html (damit Deep-Links funktionieren)
      - name: Add SPA 404 fallback
        run: cp "Gym Tracker/bin/Release/net8.0/publish/wwwroot/index.html" "Gym Tracker/bin/Release/net8.0/publish/wwwroot/404.html"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "Gym Tracker/bin/Release/net8.0/publish/wwwroot"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
